generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["postgresqlExtensions"]
}

datasource db {
  provider   = "postgresql"
  url        = env("DATABASE_URL")
  extensions = [postgis]
}

model AreaOfInterest {
  id           Int                      @id @default(autoincrement())
  name         String?
  properties   Json
  createdAt    DateTime                 @default(now())
  updatedAt    DateTime                 @updatedAt
  area         Float
  bbox         Float[]
  ccn          Int
  coordinates  Json
  country      String
  districtId   Int
  districtName String
  engType      String
  geometryType String
  iso          String
  objectId     Int
  provinceId   Int
  provinceName String
  shapeArea    Float
  shapeLeng    Float
  type         String
  type2        String
  geom         Unsupported("geometry")?

  @@index([geometryType, bbox])
}

model Soil {
  id           Int       @id @default(autoincrement())
  soilType     String
  name         String?
  properties   Json?
  bbox         Float[]
  geom         Unsupported("geometry")
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt

  @@index([geom], type: Gist)
}

model Geology {
  id          Int                      @id @default(autoincrement())
  name        String?
  bbox        Float[]
  geom        Unsupported("geometry")?
  properties  Json?
  createdAt   DateTime                 @default(now())
  updatedAt   DateTime                 @updatedAt
}


model DigitalElevationModel {
  id           Int                      @id @default(autoincrement())
  name         String
  createdAt    DateTime                 @default(now())
  updatedAt    DateTime                 @updatedAt
  elevation    Int
  geometryType String
  geom         Unsupported("geometry")?
  bbox         Float[]
  coordinates  Json

}


model ProtectedArea {
  id          Int                      @id @default(autoincrement())
  name        String
  type        String
  coordinates Json
  bbox        Float[]
  properties  Json
  createdAt   DateTime                 @default(now())
  updatedAt   DateTime                 @updatedAt
  geom        Unsupported("geometry")?

  
}

model Road {
  id          Int                      @id @default(autoincrement())
  name        String?
  properties  Json
  createdAt   DateTime                 @default(now())
  updatedAt   DateTime                 @updatedAt
  coordinates Json
  type        String
  bbox        Float[]
  geom        Unsupported("geometry")?

}

model River {
  id          Int                      @id @default(autoincrement())
  name        String
  properties  Json
  createdAt   DateTime                 @default(now())
  updatedAt   DateTime                 @updatedAt
  bbox        Float[]
  coordinates Json
  type        String
  geom        Unsupported("geometry")?

  @@index([geom])
}

model Settlement {
  id           Int                      @id @default(autoincrement())
  name         String?
  type         String
  geometryType String
  coordinates  Json
  properties   Json
  geom         Unsupported("geometry(Geometry,4326)")?
  createdAt    DateTime                 @default(now())
  updatedAt    DateTime                 @updatedAt

  @@index([geom])
}
model LandUseRaster {
     id          Int      @id @default(autoincrement())
     description String
     raster      Bytes
     createdAt   DateTime @default(now())
     updatedAt   DateTime @updatedAt
}

enum UserRole {
  ADMIN
  COLLECTOR
  SUPERVISOR
  RESIDENT
}



model IncidentReport {
  id            Int           @id @default(autoincrement())
  type          IncidentType
  description   String
  priority      IssuePriority @default(MEDIUM)
  status        IncidentStatus  @default(PENDING)
  location      Json
  geom          Unsupported("geometry(Point,4326)")
  photos        String[]
  contactName   String
  contactPhone  String
  contactEmail  String?
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt

  @@index([geom], type: Gist)
}

enum IncidentType {
  ILLEGAL_DUMPING
  OVERFLOWING_BIN
  MISSED_COLLECTION
  DAMAGED_BIN
  HAZARDOUS_WASTE
  OTHER
}

enum IncidentStatus {
  PENDING
  IN_PROGRESS
  RESOLVED
}

enum IssuePriority {
  LOW
  MEDIUM
  HIGH
  URGENT
}



model CollectionSchedule {
  id          Int       @id @default(autoincrement())
  area        String
  dayOfWeek   Int       // 0-6 (Sunday-Saturday)
  timeSlot    String    // e.g., "09:00-12:00"
  wasteType   WasteType
  route       Json?     // GeoJSON for route
  geom        Unsupported("geometry(LineString,4326)")? // Using PostGIS for route
  isActive    Boolean   @default(true)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  @@index([geom], type: Gist)
}

model SpecialPickup {
  id            Int          @id @default(autoincrement())
  type          WasteType
  quantity      String
  description   String
  status        PickupStatus @default(PENDING)
  preferredDate DateTime
  preferredTime String
  location      Json         // { lat: number, lng: number }
  geom          Unsupported("geometry(Point,4326)")? // Using PostGIS for location
  photos        String[]     // Array of photo URLs
  contactName   String
  contactPhone  String
  contactEmail  String
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt

  @@index([geom], type: Gist)
}

model Zone {
  id             Int      @id @default(autoincrement())
  name           String   @unique
  coordinates    Json     // Storing coordinates as GeoJSON
  areas          String[] // Array of area names
  collectionDays String[] // Array of collection days
  time           String
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}

enum WasteType {
  GENERAL
  RECYCLABLE
  ORGANIC
  HAZARDOUS
  E_WASTE
}

enum PickupStatus {
  PENDING
  CONFIRMED
  IN_PROGRESS
  COMPLETED
  CANCELLED
}
/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model spatial_ref_sys {
  srid      Int     @id
  auth_name String? @db.VarChar(256)
  auth_srid Int?
  srtext    String? @db.VarChar(2048)
  proj4text String? @db.VarChar(2048)
}
